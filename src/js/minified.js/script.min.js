"use strict";
import Questions from "./questions.min.js";
import {
	backToForm,
	continueDuringSurvey,
	backToWelcome,
	goingOutOfWelcome,
} from "./animations.min.js";
import accountRotator, { submittedForm } from "./accountrotator.min.js";
const body = document.querySelector("#body"),
	controlButtons = document.querySelector(".control-buttons"),
	textInputFields = document.querySelectorAll(".ads"),
	textFieldLabels = document.querySelectorAll("label"),
	selectionChoice = document.querySelector(".selection-rule"),
	ContinueButton = document.getElementById("continue"),
	BackButton = document.querySelector(".back-button"),
	ChangeEmailButton = document.getElementById("changeemail"),
	progressSVG = document.querySelector(".progress"),
	progress = document.querySelector(".percentage"),
	currentStage = document.querySelector(".current-stage"),
	errorMessage = document.querySelector(".error-message"),
	loaderDOM = document.querySelector(".loader"),
	changeEmailContainer = document.querySelector(".change-email"),
	resubmitEmailContainer = document.querySelector(".resubmitmodal"),
	editfield = document.getElementById("edit"),
	cancel = document.querySelectorAll(".cancel"),
	changeEmail = document.querySelectorAll(".saveemail"),
	inner = document.querySelector(".inner"),
	successText = document.querySelector(".sent-message"),
	errorText = document.querySelector(".error-text"),
	starterPage = document.querySelector(".q-container"),
	startQuestion = document.querySelector(".main-Q-container"),
	thankYou = document.querySelector(".thank-you"),
	userEmail = document.getElementById("email"),
	changeEmailBox = document.querySelector(".email"),
	dontResubmitButton = document.querySelector(".no"),
	emailRegex = new RegExp(/^[^\s@]+@[^\s@]+\.[^\s@]+$/),
	buttons = document.querySelectorAll(".btnn"),
	submitLoader = document.querySelector(".circle-loader");
let otfp = !1;
function debounce(t, a) {
	let s;
	return function (...e) {
		s && clearTimeout(s),
			(s = setTimeout(() => {
				t.apply(this, e);
			}, a));
	};
}
body.classList.add("soft");
const disableButtons = (t) => {
	buttons.forEach((e) => {
		t && (e.disabled = !0), t || (e.disabled = !1);
	});
};
changeEmailBox.addEventListener("click", (e) => {
	editfield.focus(), (editfield.contentEditable = !0);
}),
	ContinueButton.classList.add("widen"),
	window.screen.availWidth <= 480 &&
		((currentStage.x.baseVal[0].value = 100),
		(currentStage.y.baseVal[0].value = 145),
		ContinueButton.classList.add("widen"));
let USERS_FILE = new Object({
	1: {},
	2: {},
	3: {},
	4: {},
	5: {},
	6: {},
	7: {},
	8: {},
	9: {},
	10: {},
	11: {},
	12: {},
	13: {},
	14: {},
	15: {},
	16: {},
	17: {},
	18: {},
	19: {},
	20: {},
});
function setStage(e) {
	sessionStorage.setItem("form-stage", e.toString());
}
function currentFormStage() {
	return parseInt(sessionStorage.getItem("form-stage"));
}
function reset() {
	1 <
		Object.entries(USERS_FILE)
			.map((e) => e[1])
			.filter((e) => 0 < Object.keys(e).length).length &&
		(animateErrorMessage(
			3e3,
			600,
			20,
			"Survey has been reset because you changed your Primary Area Of Expertise.",
			"show-reset-message",
			"remove-reset-message"
		),
		(USERS_FILE = {
			1: {},
			2: {},
			3: {},
			4: {},
			5: {},
			6: {},
			7: {},
			8: {},
			9: {},
			10: {},
			11: {},
			12: {},
			13: {},
			14: {},
			15: {},
			16: {},
			17: {},
			18: {},
			19: {},
			20: {},
		}));
}
function animateErrorMessage(e, a, s, t, n, o) {
	errorText.innerText = t;
	const i = errorText.scrollWidth + 30;
	var r;
	for (r of ["remove-error-message", "remove-reset-message"])
		errorMessage.classList.remove(r);
	errorMessage.classList.add(n),
		window.screen.availWidth <= 1024 &&
			gsap.to(".circle-progress", { opacity: 0, duration: 0.3 }),
		1024 <= window.screen.availWidth && (errorMessage.style.width = s + "px"),
		window.screen.availWidth < 1024 && (errorMessage.style.width = "100%"),
		debounce(() => {
			1024 <= window.screen.availWidth
				? (errorMessage.style.width = i + "px")
				: (errorMessage.style.width = "100%");
		}, a / 2)(),
		debounce(() => {
			errorText.style.opacity = "1";
		}, a)(),
		debounce(() => {
			let t = ["show-error-message", "show-reset-message"];
			1024 <= window.screen.availWidth && (errorMessage.style.width = s + "px"),
				(errorText.style.opacity = "0"),
				debounce(() => {
					for (var e of t) errorMessage.classList.remove(e);
					errorMessage.classList.add(o);
				}, a / 2)(),
				window.screen.availWidth &&
					gsap.to(".circle-progress", {
						opacity: 1,
						duration: 0.3,
						delay: 0.6,
					});
		}, e)(),
		debounce(() => {
			1024 <= window.screen.availWidth && (errorMessage.style.width = "auto"),
				window.screen.availWidth < 1024 && (errorMessage.style.width = "100%"),
				userEmail.classList.remove("empty-email-field");
		}, e + a)();
}
function showSending(e) {
	(successText.style.opacity = "0"),
		(successText.innerText = e),
		(loaderDOM.style.width = submitLoader.scrollWidth + 50 + "px"),
		loaderDOM.classList.remove("remove"),
		loaderDOM.classList.add("show"),
		(loaderDOM.style.backgroundColor = "orange"),
		767 < screen.width &&
			(debounce(() => {
				(successText.style.display = "flex"),
					(loaderDOM.style.justifyContent = "flex-start"),
					(loaderDOM.style.width =
						submitLoader.scrollWidth + successText.scrollWidth + 50 + "px");
			}, 700)(),
			debounce(() => {
				successText.style.opacity = "1";
			}, 900)());
}
function validateEmail(e, t) {
	return emailRegex.test(e)
		? emailRegex.test(e)
			? (Questions.length, !0)
			: void 0
		: (animateErrorMessage(
				3e3,
				600,
				20,
				"Please enter a valid email address.",
				"show-error-message",
				"remove-error-message"
		  ),
		  !1);
}
function animateProgress(e) {
	var t = Object.entries(USERS_FILE)
			.map((e) => e[1])
			.filter((e) => 0 < Object.keys(e).length),
		a = Object.keys(USERS_FILE).length,
		t = Math.floor((t.length / a) * 100),
		s = Math.floor((t / 100) * 502);
	(progressSVG.style.transition = ".5s"),
		(progressSVG.style.strokeDashoffset = 502 - s),
		(progress.innerHTML = t + "%"),
		e >= Questions.length
			? (currentStage.innerHTML = e - 1 + " / " + a)
			: (currentStage.innerHTML = e + " / " + a);
}
function sendEmail(s) {
	var n;
	if (
		0 ===
		Object.entries(USERS_FILE)
			.map((e) => e[1])
			.filter((e) => 0 === Object.keys(e).length).length
	) {
		var o,
			i = Object.values(USERS_FILE);
		let t = [];
		for (o in i)
			t =
				"2" === o || "8" === o || "9" === o
					? [
							...t,
							Object.values(i[o])
								.map((e) => e.answerText)
								.join(", "),
					  ]
					: [...t, Object.values(i[o])[0].answerText];
		let a = "";
		for (let e = 1; e <= t.length; e++)
			a += `<div id="test"
						style="background-color: #344854;
						padding: 15px;
						border-radius:5px;
						width:auto;
						max-width:650px;
						text-align:left !important;
						margin-top:30px">
							<h1
							style="font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
							font-weight:400;
							font-size: 1rem;
							letter-spacing:.3px;
							padding: 0px;
							border-radius: 5px;
							width: auto;
							text-align:left !important;
							color:whitesmoke; ">${
								((n = e),
								2 === n || 3 === n
									? Questions[n].question + t[0]
									: Questions[n].question)
							}</h1>
							<p class="ra"
							style="color:#344654;
							font-size:0.9rem;
							padding:15px;
							background-color: #f2c744;
							background: linear-gradient(
								310deg,
								#f2c745 0%,
								#f3c144 33%,
								#f3bc44 48%,
								#f4b643 58%,
								#f4b043 67%,
								#f3aa44 76%,
								#f3a444 84%,
								#f29e45 100%
							);
							border:none;
							border-radius:4px;
							font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
							font-weight: 600;
							text-align:left !important;
							margin-top:15px  !important"
							margin-bottom:0  !important>${t[e - 1]}</p>
					</div>`;
		var r = `<!DOCTYPE html>
						<html>
						<head>
							<meta charset="UTF-8">
							<title>Email Template</title>
							<link rel="preconnect" href="https://fonts.googleapis.com">
							<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
							<link href="https://fonts.googleapis.com/css2?family=Merriweather&family=Open+Sans&display=swap" rel="stylesheet">

							<style>
							*{
								padding:0;
								margin:0;
								box-sizing:border-box;
							}
								body {
									font-family: 'Open Sans',system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;;
								}

								@media only screen and (max-width:600px){
									#body{}
								}

								.end{
									padding:7px 10px;
									border-radius:3px;
									background-color:#344654
									color:  #f2c744;
								}
							</style>
						</head>
						<body
						id="body"
						style="font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
						margin: 0;
						border-radius:0px;
						font-size: 14px;
						line-height: 1.6;
						padding:0 !important;
						color: #333333;">

							<table
							width="100%"
							border="0"
							cellspacing="0"
							cellpadding="0" align="center">

								<tr align="center">
									<td
									align="center"
									valign="top"
									style="">
										<table
										align="center"
										width="100%"
										border="0"
										cellspacing="00"
										cellpadding="00"
										style="width:100%;
										max-width:900px;
										border-collapse: seperate;
										border-spacing: 0px;
										margin: auto;
										display:flex;
										justify-content:center;
										background-color: white;
										padding-bottom:10px">
										<tbody align="center"
											style="width:100% !important;
											padding:0px">
												<tr
												align="center"
												style="width:100% !important;
												padding:0px">
													<td
													align="start"
													valign="top"
													style="width:100%;
													padding:0px;
													color:white; ">
													<h1
														style="color:#344854;
														text-align:left !important;">🎉 Hurray!</h1>
													<p
													style="
													font-size:.9rem;
													margin-top:15px;
													color:#344854;
													text-align:left !important;">Below are your answers to each Questions asked</p>
														${a}
													</td>
												</tr>
											</tbody>
										</table>
									</td>
								</tr>
							</table>
						</body>
						</html>`;
		debounce(() => {
			showSending("Submitting Form..."), disableButtons(!0);
		}, 500)();
		let e = { my_html: r, user: s, reply_to: "gbadebojubril@gmail.com" };
		debounce(() => {
			accountRotator(e);
		}, 2e3)();
	}
}
function gotoNextStep(e, t) {
	const a = document.querySelector(".answer-field"),
		s = document.querySelector(".Question");
	if (0 === e) {
		var n = 0 === userEmail.value.trim().length;
		if (n)
			return (
				userEmail.classList.add("empty-email-field"),
				void animateErrorMessage(
					3e3,
					600,
					20,
					"Please enter your email address to continue.",
					"show-error-message",
					"remove-error-message"
				)
			);
		if (!n) {
			if (!validateEmail(userEmail.value.trim(), e))
				return void userEmail.classList.add("empty-email-field");
			goingOutOfWelcome(),
				sessionStorage.setItem("email", userEmail.value.trim());
		}
	}
	if (
		(++e >= t.length &&
			((inner.innerText = sessionStorage.getItem("email")),
			!0 === submittedForm &&
				((resubmitEmailContainer.style.display = "flex"),
				gsap.fromTo(
					resubmitEmailContainer,
					{ opacity: 0 },
					{ opacity: 1, duration: 0.3 }
				),
				(dontResubmitButton.onclick = () => {
					gsap.fromTo(
						resubmitEmailContainer,
						{ opacity: 1 },
						{ opacity: 0, duration: 0.3 }
					),
						gsap.to(".control-buttons", { opacity: 1, y: 0 }, "<50%"),
						gsap.to(".circle-progress", { opacity: 1 }, "<"),
						debounce(() => {
							resubmitEmailContainer.style.display = "none";
						}, 400)(),
						setStage((e -= 1));
				})),
			!1 === submittedForm && sendEmail(sessionStorage.getItem("email")),
			animateProgress(20),
			(e = t.length)),
		e <= t.length && 0 < e)
	) {
		body.classList.add("soft"),
			controlButtons.classList.add("csoft"),
			(thankYou.style.display = "none"),
			debounce(() => {
				(ContinueButton.children[0].innerText = "Continue"),
					(ContinueButton.style.display = "flex"),
					(BackButton.style.display = "flex"),
					ContinueButton.classList.remove("widen"),
					BackButton.classList.remove("widen");
			}, 500)();
		try {
			ChangeEmailButton.style.display = "none";
		} catch (e) {}
		try {
			if (
				Object.keys(USERS_FILE[e - 1]) &&
				0 === Object.keys(USERS_FILE[e - 1]).length
			)
				return void animateErrorMessage(
					3e3,
					600,
					20,
					"Please select an option",
					"show-error-message",
					"remove-error-message"
				);
		} catch (e) {}
		e <= t.length - 1 && 1 < e && continueDuringSurvey(s, a),
			debounce(() => {
				t[e] &&
					((s.innerHTML =
						`<h1 class="qnumbering">Question ${e} of ${t.length - 1}</h1>` +
						askQuestionsInteractively(e, t)),
					displayAnswersInteractively(a, e, t));
			}, 500)();
	}
	setStage(e), animateProgress(currentFormStage());
}
function gotoPreviousStep(e, t) {
	const a = document.querySelector(".answer-field"),
		s = document.querySelector(".Question");
	setStage((e = --e <= 0 ? 0 : e)),
		animateProgress(currentFormStage()),
		e === parseInt(Object.keys(USERS_FILE).length) &&
			(backToForm(startQuestion, s, a), body.classList.remove("blurbody")),
		e <= 0
			? ((thankYou.style.display = "none"),
			  debounce(() => {
					(BackButton.style.display = "none"),
						ContinueButton.classList.add("widen"),
						controlButtons.classList.remove("csoft"),
						(startQuestion.style.display = "none"),
						(starterPage.style.display = "flex");
			  }, 500)(),
			  backToWelcome())
			: 0 < e &&
			  (e < parseInt(Object.keys(USERS_FILE).length) &&
					continueDuringSurvey(s, a),
			  setTimeout(() => {
					(ContinueButton.style.display = "flex"),
						(BackButton.style.display = "flex"),
						BackButton.classList.remove("widen"),
						ContinueButton.classList.remove("widen");
			  }, 500),
			  setTimeout(() => {
					(s.innerHTML =
						`<h1 class="qnumbering">Question ${e} of ${t.length - 1}</h1>` +
						askQuestionsInteractively(e, t)),
						displayAnswersInteractively(a, e, t);
			  }, 500));
}
function markAlreadyChosenSelections(e) {
	var t = document.querySelectorAll(".ans-box");
	let a = Object.entries(USERS_FILE[e]).map((e) => e[0]);
	t.forEach((t) => {
		a.filter((e) => {
			t.dataset.id === e &&
				(t.classList.value.includes("textonlybox") &&
					addCheckAnimationForTextBoxOnly(t.children[0], t),
				t.classList.value.includes("text-imgbox") &&
					addCheckAnimationForImgTextBox(t.children[0], t),
				t.classList.value.includes("bare-ans") &&
					addCheckAnimationForIconAndText(t.children[0], t),
				t.classList.value.includes("two-ans")) &&
				addCheckAnimationForTwoAns(t.children[0], t);
		});
	});
}
function askQuestionsInteractively(e, t) {
	switch (e) {
		case 2:
		case 3:
			var a,
				s = [];
			for (a in USERS_FILE[1]) s.push(USERS_FILE[1][a].answerText);
			return t[e].question + ` ${s[0]} ?`;
		default:
			return t[e].question;
	}
}
function displayAnswersInteractively(a, s, t) {
	function n(e, t) {
		(a.innerHTML = ""),
			setTimeout(() => {
				switch (s) {
					case 1:
					case 9:
					case 10:
						a.innerHTML += `
					<div class="text-imgbox ans-box" id="ss" data-answer="${t.text}" data-id="${e}">
						<div class="checker2" data-answer="${t.text}" data-id="${e}" ></div>
						<div class="image-container2" style="background-image:url(${t.img})" data-answer="${t.text}" data-id="${e}">
							<div class="shade" data-answer="${t.text}" data-id="${e}">
								<h2 class="ans-text img-ans-text"  data-answer="${t.text}" data-id="${e}">${t.text}</</h2>
							</div>
						</div>

					</div>`;
						break;
					case 11:
						a.classList.add("ans-with-2options"),
							(a.innerHTML += `<div class="two-ans ans-box" id="two-ans-box" data-answer="${t.text}" data-id="${e}">
					<div class="tools-ans-checker"></div>
					<div id ="two-ans-logo-disp" style='background-image:url("${t.img}")'  class="ans-logo" data-answer="${t.text}" data-id="${e}"></div>
						<p class="textt" data-answer="${t.text}" data-id="${e}"> ${t.text}</p>
					</div>`);
						break;
					case 2:
					case 4:
					case 5:
					case 6:
					case 7:
					case 8:
					case 13:
					case 14:
					case 15:
					case 16:
					case 17:
					case 18:
					case 19:
					case 20:
					case 12:
						a.innerHTML += `
					<div class="textonlybox ans-box" data-answer="${t.text}" data-id="${e}">
						<div class="text-checker" data-answer="${t.text}" data-id="${e}"></div>
						<div class="text-content" data-answer="${t.text}" data-id="${e}">
							<p class="box-text" data-answer="${t.text}" data-id="${e}">${t.text}</p>
						</div>
					</div>`;
						break;
					case 3:
						a.innerHTML += `
					<div class="bare-ans ans-box" data-answer="${t.text}" data-id="${e}">
					<div class="tools-ans-checker"></div>
					<div id ="logo-disp" style='background-image:url("${t.img}")'  class="ans-logo" data-answer="${t.text}" data-id="${e}"></div>
						<p data-answer="${t.text}" data-id="${e}"> ${t.text}</p>
					</div>`;
				}
				switch (s) {
					case 1:
					case 9:
					case 10:
						a.classList.add("eight-ans-grid");
						break;
					case 3:
						a.classList.add("icon-text-ans");
						break;
					case 13:
						a.classList.add("continous-two");
						break;
					case 4:
					case 5:
					case 6:
					case 7:
					case 8:
					case 14:
					case 15:
						a.classList.add("ans-with-4ans-textonly");
						break;
					case 16:
					case 17:
					case 18:
					case 12:
						document
							.querySelectorAll(".ans-box")
							.forEach((e) => e.classList.add("five-texts-ans")),
							a.classList.add("ans-with-5option-textonly");
						break;
					case 19:
					case 20:
					case 2:
						a.classList.add("straight-ans");
				}
				handleAnswers(s);
			}, 0);
	}
	if (
		([
			"eight-ans-grid",
			"icon-text-ans",
			"continous-two",
			"ans-with-4ans-textonly",
			"ans-with-5option-textonly",
			"straight-ans",
			"ans-with-2options",
		].forEach((e) => {
			a.classList.value.includes(e) && a.classList.remove(e);
		}),
		t[s].answers[0].text &&
			t[s].answers.forEach((e, t) => {
				n(t, e);
			}),
		!t[s].answers[0].text)
	) {
		function e(e) {
			t[s].answers[e].forEach((e, t) => {
				n(t, e);
			});
		}
		switch (parseInt(Object.keys(USERS_FILE[1])[0])) {
			case 0:
			case 2:
				e(0);
				break;
			case 1:
			case 3:
				e(1);
				break;
			case 4:
				e(2);
				break;
			case 5:
				e(3);
				break;
			case 6:
				e(4);
				break;
			case 7:
				e(5);
				break;
			default:
				return;
		}
	}
}
setStage(0),
	[textFieldLabels, textInputFields].forEach((e) => {
		e.forEach((t) => {
			["click", "focus"].forEach((e) => {
				t.addEventListener(e, (e) => {
					"LABEL" === e.target.nodeName &&
						(e.target.nextElementSibling.focus(),
						e.target.nextElementSibling.click()),
						"INPUT" === e.target.nodeName &&
							((e.target.offsetParent.children[1].style.border =
								"1px solid #2260ff"),
							(e.target.offsetParent.firstElementChild.classList +=
								" move-up"));
				});
			});
		}),
			e.forEach((e) => {
				e.addEventListener("blur", (e) => {
					if (e.target.classList.value.includes("ads"))
						try {
							0 === e.target.value.trim().length &&
								(e.target.offsetParent.firstElementChild.classList.remove(
									"move-up"
								),
								(e.target.offsetParent.children[1].style.border = ""));
						} catch (e) {}
				});
			});
	}),
	0 < textInputFields[0].value.length &&
		((textInputFields[0].offsetParent.firstElementChild.classList +=
			" move-up"),
		(textInputFields[0].offsetParent.children[1].style.border =
			"1px solid #2260ff"));
const addCheckAnimationForImgTextBox = (e) => {
		e.classList.add("checked2");
	},
	removeCheckAnimationForImgTextBox = (e) => {
		e.classList.remove("checked2");
	},
	addCheckAnimationForTextBoxOnly = (e, t) => {
		e.classList.add("text-checked"), t.classList.add("textcontainer-checked");
	},
	removeCheckAnimationForTextBoxOnly = (e, t) => {
		e.classList.remove("text-checked"),
			t.classList.remove("textcontainer-checked");
	},
	addCheckAnimationForIconAndText = (e, t) => {
		e.classList.add("opacity"), t.classList.add("tools-ans-checked");
	},
	removeCheckAnimationForIconAndText = (e, t) => {
		e.classList.remove("opacity"), t.classList.remove("tools-ans-checked");
	},
	addCheckAnimationForTwoAns = (e, t) => {
		e.classList.add("opacity"), t.classList.add("two-ans-container-checked");
	},
	removeCheckAnimationForTwoAns = (e, t) => {
		e.classList.remove("opacity"),
			t.classList.remove("two-ans-container-checked");
	};
function addClass(e) {
	var t,
		a = [
			e.target,
			e.target.parentElement,
			e.target.parentElement.parentElement,
			e.target.parentElement.parentElement.parentElement,
		];
	for (t in a) {
		if (a[t].classList.value.includes("text-imgbox")) {
			addCheckAnimationForImgTextBox(a[t].children[0], a[t]);
			break;
		}
		if (a[t].classList.value.includes("textonlybox")) {
			addCheckAnimationForTextBoxOnly(a[t].children[0], a[t]);
			break;
		}
		if (a[t].classList.value.includes("bare-ans")) {
			addCheckAnimationForIconAndText(a[t].children[0], a[t]);
			break;
		}
		if (a[t].classList.value.includes("two-ans")) {
			addCheckAnimationForTwoAns(a[t].children[0], a[t]);
			break;
		}
	}
}
function removeClass(e) {
	var t,
		a = [
			e.target,
			e.target.parentElement,
			e.target.parentElement.parentElement,
			e.target.parentElement.parentElement.parentElement,
		];
	for (t in a) {
		if (a[t].classList.value.includes("text-imgbox")) {
			removeCheckAnimationForImgTextBox(a[t].children[0], a[t]);
			break;
		}
		if (a[t].classList.value.includes("textonlybox")) {
			removeCheckAnimationForTextBoxOnly(a[t].children[0], a[t]);
			break;
		}
		if (a[t].classList.value.includes("bare-ans")) {
			removeCheckAnimationForIconAndText(a[t].children[0], a[t]);
			break;
		}
		if (a[t].classList.value.includes("two-ans")) {
			removeCheckAnimationForTwoAns(a[t].children[0], a[t]);
			break;
		}
	}
}
function markAndSaveSelections(s, a, n) {
	s ||
		((selectionChoice.innerText = "Please select only one."),
		a.forEach((e) => {
			e.addEventListener("click", (e) => {
				var t = e.target;
				a.forEach((e) => {
					e.classList.value.includes("text-imgbox")
						? removeCheckAnimationForImgTextBox(e.children[0], e)
						: e.classList.value.includes("textonlybox")
						? removeCheckAnimationForTextBoxOnly(e.children[0], e)
						: (e.classList.value.includes("bare-ans") &&
								removeCheckAnimationForIconAndText(e.children[0], e),
						  e.classList.value.includes("two-ans") &&
								removeCheckAnimationForTwoAns(e.children[0], e));
				}),
					addClass(e),
					1 === n && reset(),
					addAnswerToPersonObject(s, t.dataset.id, t.dataset.answer, n);
			});
		})),
		s &&
			((selectionChoice.innerText = "You can select as many as you wish."),
			a.forEach((e) => {
				e.addEventListener("click", (e) => {
					var t,
						a = [
							e.target,
							e.target.parentElement,
							e.target.parentElement.parentElement,
							e.target.parentElement.parentElement.parentElement,
						];
					for (t in a) {
						if (
							(a[t].classList.value.includes("text-imgbox") &&
								a[t].children[0].classList.value.includes("checked2")) ||
							(a[t].classList.value.includes("textonlybox") &&
								a[t].children[0].classList.value.includes("text-checked")) ||
							(a[t].classList.value.includes("bare-ans") &&
								a[t].children[0].classList.value.includes("opacity")) ||
							(a[t].classList.value.includes("two-ans") &&
								a[t].children[0].classList.value.includes("opacity"))
						) {
							removeClass(e), removeAnswerToPersonObject(a[t].dataset.id, n);
							break;
						}
						((a[t].classList.value.includes("bare-ans") &&
							!a[t].children[0].classList.value.includes("opacity")) ||
							(a[t].classList.value.includes("textonlybox") &&
								!a[t].children[0].classList.value.includes("text-checked")) ||
							(a[t].classList.value.includes("text-imgbox") &&
								!a[t].children[0].classList.value.includes("checked2")) ||
							(a[t].classList.value.includes("two-ans") &&
								a[t].children[0].classList.value.includes("opacity"))) &&
							(addClass(e),
							addAnswerToPersonObject(
								s,
								a[t].dataset.id,
								a[t].dataset.answer,
								n
							));
					}
				});
			}));
}
function moreThanOneSelectionIsPermitted(e) {
	switch (e) {
		case 3:
		case 9:
		case 10:
			return !0;
		case 1:
		case 2:
		case 4:
		case 5:
		case 6:
		case 7:
		case 8:
		case 13:
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
		case 19:
		case 20:
			return !1;
	}
}
function handleAnswers(e) {
	var t = document.querySelectorAll(".ans-box"),
		a = moreThanOneSelectionIsPermitted(e);
	document.querySelectorAll(".end").forEach((e) => {
		e.disabled = !0;
	}),
		e <= Questions.length - 1 &&
			0 < e &&
			((starterPage.style.display = "none"),
			(startQuestion.style.display = "flex"),
			(thankYou.style.display = "none"),
			markAlreadyChosenSelections(e),
			markAndSaveSelections(a, t, e));
}
function removeAnswerToPersonObject(e, t) {
	delete USERS_FILE[t][e];
}
function addAnswerToPersonObject(e, t, a, s) {
	e && (USERS_FILE[s][t] = { ...USERS_FILE[s][t], answerText: a }),
		e || (USERS_FILE[s] = { [t]: { answerText: a } });
}
(changeEmailContainer.style.display = "none"),
	(resubmitEmailContainer.style.display = "none"),
	(inner.onfocus = () => {
		(document.querySelector(".email").style.overflow = "scroll"),
			inner.classList.remove("turndot", "turndot"),
			(inner.contentEditable = !0),
			(otfp = !0);
	}),
	(inner.onblur = () => {
		otfp = !1;
		var e = document.querySelector(".email");
		inner.classList.add("turndot"),
			(e.style.overflow = "hidden"),
			editfield.innerText !== sessionStorage.getItem("email") &&
				(validateEmail(editfield.innerText) &&
					((changeEmailContainer.style.display = "flex"),
					gsap.fromTo(
						changeEmailContainer,
						{ opacity: 0 },
						{ opacity: 1, duration: 0.3 }
					)),
				validateEmail(editfield.innerText) ||
					(inner.innerText = sessionStorage.getItem("email")));
	}),
	(inner.onkeydown = (e) => {
		(otfp = !0),
			"Enter" === e.key &&
				((editfield.contentEditable = !1),
				editfield.innerText !== sessionStorage.getItem("email")) &&
				(validateEmail(editfield.innerText) &&
					((changeEmailContainer.style.display = "flex"),
					gsap.fromTo(
						changeEmailContainer,
						{ opacity: 0 },
						{ opacity: 1, duration: 0.3 }
					)),
				validateEmail(editfield.innerText) ||
					((editfield.contentEditable = !0),
					(editfield.innerText = sessionStorage.getItem("email")),
					(editfield.style.width = "auto")));
	}),
	changeEmail.forEach((e) => {
		e.onclick = () => {
			sessionStorage.setItem("email", editfield.innerText),
				sendEmail(sessionStorage.getItem("email", editfield.innerText)),
				gsap.to(changeEmailContainer, { opacity: 0, duration: 0.3 }),
				gsap.to(resubmitEmailContainer, { opacity: 0, duration: 0.3 }),
				debounce(() => {
					(changeEmailContainer.style.display = "none"),
						(resubmitEmailContainer.style.display = "none");
				}, 300)();
		};
	}),
	cancel.forEach((e) => {
		e.onclick = (e) => {
			gsap.to(changeEmailContainer, { opacity: 0, duration: 0.3 }),
				gsap.to(resubmitEmailContainer, { opacity: 0, duration: 0.3 }),
				gsap.to(".control-buttons", { opacity: 1, y: 0, duration: 0.5 }),
				gsap.to(".circle-progress", { opacity: 1 }, "<"),
				debounce(() => {
					(changeEmailContainer.style.display = "none"),
						(resubmitEmailContainer.style.display = "none");
				}, 300)(),
				e.target.classList.value.includes("c2") &&
					setStage(currentFormStage() - 1);
		};
	});
let fk, fy, ckdb, bkdb;
function enterKeyDebounce(e, t) {
	clearTimeout(fk), (fk = setTimeout(e, t));
}
function leftnRightkeyDebounce(e, t) {
	clearTimeout(fy), (fy = setTimeout(e, t));
}
function continueButtonDebounce(e, t) {
	clearTimeout(ckdb), (ckdb = setTimeout(e, t));
}
function backButtonDebounce(e, t) {
	clearTimeout(bkdb), (bkdb = setTimeout(e, t));
}
function keydownHandler(e) {
	!0 !== otfp &&
		(currentFormStage() === Object.values(USERS_FILE).length + 1
			? "ArrowLeft" === e.key && gotoPreviousStep(currentFormStage(), Questions)
			: currentFormStage() <= Object.values(USERS_FILE).length &&
			  0 < currentFormStage() &&
			  ("ArrowRight" === e.key && gotoNextStep(currentFormStage(), Questions),
			  "ArrowLeft" === e.key) &&
			  gotoPreviousStep(currentFormStage(), Questions));
}
function enterKeyPressHandler(e) {
	currentFormStage() < Object.values(USERS_FILE).length + 1 &&
		"Enter" === e.key &&
		gotoNextStep(currentFormStage(), Questions);
}
ContinueButton.addEventListener("click", (e) => {
	continueButtonDebounce(
		() => gotoNextStep(currentFormStage(), Questions),
		400
	);
}),
	BackButton.addEventListener("click", (e) => {
		backButtonDebounce(
			() => gotoPreviousStep(currentFormStage(), Questions),
			400
		);
	}),
	window.addEventListener("keydown", (e) => {
		leftnRightkeyDebounce(() => {
			keydownHandler(e);
		}, 400);
	}),
	window.addEventListener("keydown", (e) => {
		enterKeyDebounce(() => {
			enterKeyPressHandler(e);
		}, 400);
	}),
	animateProgress(0);
export {
	debounce,
	disableButtons,
	setStage,
	currentFormStage,
	animateErrorMessage,
};
