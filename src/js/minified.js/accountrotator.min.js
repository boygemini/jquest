"use strict";
import { showThankYouPage } from "./animations.js";
import questions from "./questions.js";
import {
	animateErrorMessage,
	setStage,
	debounce,
	disableButtons,
} from "./script.min.js";
import accounts from "./config.min.js";
const starterPage = document.querySelector(".q-container"),
	startQuestion = document.querySelector(".main-Q-container"),
	thankYou = document.querySelector(".thank-you"),
	BackButton = document.querySelector(".back-button"),
	ContinueButton = document.getElementById("continue"),
	userEmail = document.getElementById("email"),
	submitLoader = document.querySelector(".circle-loader"),
	successMark = document.querySelector(".checkmark"),
	loaderDOM = document.querySelector(".loader"),
	successText = document.querySelector(".sent-message");
let submitCounter = 0;
export let submittedForm = !1;
export let didntSendEmailDueToError = !1;
export function showSent(e) {
	(successText.style.opacity = "0"),
		setTimeout(() => {
			(successText.innerText = e),
				(successText.style.display = "none"),
				(loaderDOM.style.justifyContent = "center"),
				submitLoader.classList.add("load-complete"),
				(loaderDOM.style.backgroundColor = "#11bd05"),
				(loaderDOM.style.width = `${submitLoader.scrollWidth + 50}px`);
		}, 200);
	debounce(() => {
		(successMark.style.display = "flex"), (successText.style.display = "none");
	}, 300)();
	debounce(() => {
		successText.style.opacity = "0";
		debounce(() => {
			loaderDOM.style.width = `${submitLoader.scrollWidth + 50}px`;
		}, 300)();
		debounce(() => {
			loaderDOM.classList.remove("show"),
				loaderDOM.classList.add("remove"),
				submitLoader.classList.remove("load-complete"),
				(successMark.style.display = "none");
		}, 600)();
	}, 1e3)();
}
export function removeMessage() {
	(successText.style.opacity = "0"),
		setTimeout(() => {
			loaderDOM.classList.remove("show"), loaderDOM.classList.add("remove");
		}, 600),
		setTimeout(() => {
			loaderDOM.style.width = "auto";
		}, 1e3);
}
async function accountRotator(e) {
	let {
		service_id: t,
		private_key: o,
		template_id: s,
	} = accounts[submitCounter];
	emailjs.send(t, s, e, o).then(
		function () {
			showSent("Form Submitted Successfully"), showThankYouPage(startQuestion);
			debounce(() => {
				(ContinueButton.style.display = "none"),
					BackButton.classList.add("widen");
			}, 400)();
			debounce(() => {
				(thankYou.style.display = "flex"),
					(starterPage.style.display = "none"),
					(startQuestion.style.display = "none"),
					body.classList.add("blurbody");
			}, 600)(),
				(userEmail.value = sessionStorage.getItem("email")),
				(submittedForm = !0),
				disableButtons(!1);
		},
		function (t) {
			let o = accounts.length - 1;
			if ((submitCounter++, submitCounter === o)) {
				let e;
				return (
					t.text && (e = "please try again later. Thank you."),
					gsap.to(".control-buttons", { opacity: 1, y: 0, duration: 0.5 }),
					gsap.to(".circle-progress", { opacity: 1 }, "<"),
					removeMessage(),
					animateErrorMessage(
						8e3,
						600,
						20,
						`Error occurred : ${e || "no internet connection"}`,
						"show-error-message",
						"remove-error-message"
					),
					setStage(questions.length - 1),
					(submitCounter = 0),
					void disableButtons(!1)
				);
			}
			debounce(() => {
				accountRotator(e);
			}, 100)();
		}
	);
}
export default accountRotator;
